version: 2.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:16.10.0
      - image: docker:17.09.1-ce-git
    steps:
      - checkout # pulls code from github repo
      - setup_remote_docker
      # - run:
      #     name: cd & update
      #     command: |
      #       cd frontend
      #       sudo npm install -g
      - restore_cache:
          key: dependency-cache-{{ checksum "./frontend/package.json" }}
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
          # npm run build
      - save_cache:
          key: dependency-cache-{{ checksum "./frontend/package.json" }}
          paths:
            - ./frontend/node_modules
      - run:
          name: Docker
          when: on_success
          command: |
            cd frontend
            docker --version
            docker login -u=$DOCKER_LOGIN -p=$DOCKER_PASSWORD
            docker build -t codak77/addictionsupportwebfrontend:frontend --build-arg codak77=addictionsupportwebfrontend-frontend .
            docker push codak77/addictionsupportwebfrontend:frontend
            echo "Docker build made sucessfully!! for addictionsupportwebfrontend:frontend"
      - run:
          name: Build Failure
          when: on_fail
          command: |
            echo "ERROR building addictionsupportwebfrontend:frontend"

  build-backend:
    docker:
      - image: cimg/python:3.10
      - image: docker:17.09.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend/app
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - save_cache:
          paths: [backend/dependencies/app]
          key: backend-build

      - run:
          name: Docker
          when: on_success
          command: |
            cd backend/app
            docker --version
            docker login -u=$DOCKER_LOGIN -p=$DOCKER_PASSWORD
            docker build -t codak77/addictionsupportwebbackend:backend --build-arg codak77=addictionsupportwebbackend-backend .
            docker push codak77/addictionsupportwebbackend:backend
            echo "Docker build made sucessfully!! for addictionsupportwebbackend:backend"
      - run:
          name: Build Failure
          when: on_fail
          command: |
            echo "ERROR building addictionsupportwebbackend:backend"

  deploy_images:
    docker:
      - image: circleci/node:16.10.0
      - image: docker:17.09.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "fb:2c:14:98:43:f2:82:29:de:37:03:6e:fb:28:69:93"
      - run: 
          name: SSH
          when: on_success
          command: |
            ssh -o "StrictHostKeyChecking no" ubuntu@ec2-34-195-39-141.compute-1.amazonaws.com "\
              cd /home/ubuntu
              sudo docker stop frontend backend
              sudo docker rm frontend backend
              sudo docker rmi -f codak77/addictionsupportwebbackend:backend codak77/addictionsupportwebfrontend:frontend
              sudo docker pull codak77/addictionsupportwebbackend:backend
              sudo docker pull codak77/addictionsupportwebfrontend:frontend
              sudo docker run -d -p 3000:3000 --name frontend codak77/addictionsupportwebfrontend:frontend
              sudo docker run -d -p 8000:8000 --name backend codak77/addictionsupportwebbackend:backend
              sudo docker system prune -af && sudo docker builder prune -af && exit"
      - run:
          name: Deploy Failure
          when: on_fail
          command: |
            echo "ssh into server failed"

workflows:
  default:
    jobs:
      - build-frontend:
          filters:
            branches:
              only:
                - dev
                - staging
      - build-backend:
          filters:
            branches:
              only:
                - dev
                - staging
      - deploy_images:
          requires:
            - build-frontend
            - build-backend
          filters:
            branches:
              only:
                  - dev
                  - staging
